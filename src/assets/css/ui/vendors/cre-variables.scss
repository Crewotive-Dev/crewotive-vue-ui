$spacer: 1rem;
$spacers: ();
$clock-way: ("top","tr","end","br","bottom","bl","start","tl");
$x-alignments: ("start","center","end");
$y-alignments: ("top","center","bottom");
$variable-prefix: cre-;

$font-weights: ($font-weight-lighter,$font-weight-light,$font-weight-normal,$font-weight-bold,$font-weight-bolder,$font-weight-base);

@for $s from 0 through 10{
  $spacers: map-merge($spacers, (#{$s}: #{$s*$spacer}));
}

//  Add position options 10 each 10, from 10% to 100%
// @for $s from 1 through 9{
//   $position-values: map-merge($position-values, (#{$s*10}: calc(#{$s*10}*1%)));
// }


// theme-colors start
//  Duplicate and merge $theme-colors and $colors values with brighter and darker versions
$theme-colors: map-remove(map-merge($theme-colors,$colors),"gray-dark","gray");
$color-tints: (1: 80,2: 60,3: 40,4: 20,5: null,6: 20,7: 40,8: 60,9: 80);
@each $colorKey,$colorVal in $theme-colors{
  @each $key, $val in $color-tints{

    @if $key<5{
      $theme-colors: map-merge($theme-colors,("#{$colorKey}-#{$key}": tint-color($colorVal,$val)));
    }
    @if $key>5{
      $theme-colors: map-merge($theme-colors,("#{$colorKey}-#{$key}": shade-color($colorVal,$val)));
    }
    @if $val==null{
      $theme-colors: map-merge($theme-colors,("#{$colorKey}-#{$key}": $colorVal));
    }
  }
}
// theme-colors end

// Border start

$border-width: .2rem;
$border-width-count: 10;
$border-side-widths: () !default;
$border-widths: () !default;

@for $width from 0 through $border-width-count{
  $border-side-widths: map-merge($border-side-widths, ($width: $width*$border-width solid $border-color));
  $border-widths: map-merge($border-widths, ($width: $width*$border-width));
};

// Border end

// Input Button start


// Input Button end